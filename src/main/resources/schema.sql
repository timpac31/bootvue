CREATE TABLE IF NOT EXISTS CODE_GROUP (
    GROUP_CODE VARCHAR(3) NOT NULL,
    GROUP_NAME VARCHAR(30) NOT NULL,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    USE_YN VARCHAR(1),
    PRIMARY KEY(GROUP_CODE)
);

CREATE TABLE IF NOT EXISTS CODE_DETAIL (
    CODE_DETAIL_NO BIGINT NOT NULL AUTO_INCREMENT,
    GROUP_CODE VARCHAR(3) NOT NULL,
    CODE_VALUE VARCHAR(3) NOT NULL,
    CODE_NAME VARCHAR(30) NOT NULL,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    USE_YN VARCHAR(1),
    PRIMARY KEY(CODE_DETAIL_NO),
    FOREIGN KEY(GROUP_CODE) REFERENCES CODE_GROUP(GROUP_CODE)
);

CREATE TABLE IF NOT EXISTS MEMBER (
    USER_NO BIGINT NOT NULL AUTO_INCREMENT,
    USER_ID VARCHAR(50) NOT NULL,
    USER_PW VARCHAR(200) NOT NULL,
    USER_NAME VARCHAR(100) NOT NULL,
    JOB VARCHAR(3) NOT NULL,
    COIN INTEGER NOT NULL NOT NULL,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(USER_NO)
);

CREATE TABLE IF NOT EXISTS MEMBER_AUTH (
    USER_AUTH_NO BIGINT NOT NULL AUTO_INCREMENT,
    USER_NO BIGINT,
    AUTH VARCHAR(50),
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(USER_AUTH_NO),
    FOREIGN KEY(USER_NO) REFERENCES MEMBER(USER_NO)
);

CREATE TABLE IF NOT EXISTS BOARD (
    BOARD_NO BIGINT NOT NULL AUTO_INCREMENT,
    TITLE VARCHAR(255) NOT NULL,
    WRITER VARCHAR(50),
    CONTENT LONGTEXT,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(BOARD_NO)
);

CREATE TABLE IF NOT EXISTS NOTICE (
    NOTICE_NO BIGINT NOT NULL AUTO_INCREMENT,
    TITLE VARCHAR(255) NOT NULL,
    CONTENT LONGTEXT,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(NOTICE_NO)
);

CREATE TABLE IF NOT EXISTS ITEMS (
    ITEM_ID BIGINT NOT NULL AUTO_INCREMENT,
    ITEM_NAME VARCHAR(50),
    PRICE INTEGER,
    DESCRIPTION VARCHAR(250),
    PICTURE_URL VARCHAR(200),
    PREVIEW_URL VARCHAR(200),
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(ITEM_ID)
);

CREATE TABLE IF NOT EXISTS USER_ITEM (
    USER_ITEM_NO BIGINT NOT NULL AUTO_INCREMENT,
    USER_NO BIGINT,
    ITEM_ID BIGINT,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(USER_ITEM_NO)
);

CREATE TABLE IF NOT EXISTS PDS (
    ITEM_ID BIGINT NOT NULL AUTO_INCREMENT,
    ITEM_NAME VARCHAR(255),
    VIEW_CNT INTEGER,
    DESCRIPTION VARCHAR(255),
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(ITEM_ID)
);

CREATE TABLE IF NOT EXISTS PDS_FILE (
    PDS_FILE_ID BIGINT NOT NULL AUTO_INCREMENT,
    ITEM_ID BIGINT,
    FULL_NAME VARCHAR(200),
    DOWN_CNT INTEGER,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(PDS_FILE_ID),
    FOREIGN KEY(ITEM_ID) REFERENCES PDS(ITEM_ID)
);

CREATE TABLE IF NOT EXISTS CHARGE_COIN_HISTORY (
    HISTORY_NO BIGINT NOT NULL AUTO_INCREMENT,
    USER_NO BIGINT,
    AMOUNT INTEGER NOT NULL,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(HISTORY_NO)
);

CREATE TABLE IF NOT EXISTS PAY_COIN_HISTORY (
    HISTORY_NO BIGINT NOT NULL AUTO_INCREMENT,
    USER_NO BIGINT,
    ITEM_ID BIGINT,
    ITEM_NAME VARCHAR(255),
    AMOUNT INTEGER NOT NULL,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(HISTORY_NO)
);

CREATE TABLE IF NOT EXISTS ACCESS_LOG (
    LOG_NO BIGINT NOT NULL AUTO_INCREMENT,
    REQUEST_URI VARCHAR(200) NOT NULL,
    CLASS_NAME VARCHAR(100) NOT NULL,
    CLASS_SIMPLE_NAME VARCHAR(50) NOT NULL,
    METHOD_NAME VARCHAR(100) NOT NULL,
    REMOTE_ADDR VARCHAR(50) NOT NULL,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(LOG_NO)
);

CREATE TABLE IF NOT EXISTS PERFORMANCE_LOG (
    LOG_NO BIGINT NOT NULL AUTO_INCREMENT,
    SIGNATURE_NAME VARCHAR(50) NOT NULL,
    SIGNATURE_TYPE_NAME VARCHAR(100) NOT NULL,
    DURATION_TIME BIGINT,
    REG_DATE DATETIME,
    UPD_DATE DATETIME,
    PRIMARY KEY(LOG_NO)
);

